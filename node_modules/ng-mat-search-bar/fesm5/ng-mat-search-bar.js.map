{"version":3,"file":"ng-mat-search-bar.js.map","sources":["ng://ng-mat-search-bar/src/app/ng-mat-search-bar/util/abstract-value-accessor.ts","ng://ng-mat-search-bar/src/app/ng-mat-search-bar/mat-search-bar/mat-search-bar.component.ts","ng://ng-mat-search-bar/src/app/ng-mat-search-bar/ng-mat-search-bar.module.ts"],"sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\n\nexport abstract class AbstractControlValueAccessor<T>\n  implements ControlValueAccessor {\n  value: string;\n\n  /**\n   * Invoked when the model has been changed\n   */\n  onChange: (_: any) => void = (_: any) => {};\n  /**\n   * Invoked when the model has been touched\n   */\n  onTouched: () => void = () => {};\n  /**\n   * Method that is invoked on an update of a model.\n   */\n  updateChanges() {\n    this.onChange(this.value);\n  }\n\n  /**\n   * Writes a new item to the element.\n   * @param value the value\n   */\n  writeValue(value: string): void {\n    this.value = value;\n    this.updateChanges();\n  }\n\n  /**\n   * Registers a callback function that should be called when the control's value changes in the UI.\n   * @param fn\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Registers a callback function that should be called when the control receives a blur event.\n   * @param fn\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Output,\n  ViewChild,\n  Input,\n  OnInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../util/abstract-value-accessor';\n\n@Component({\n  selector: 'mat-search-bar',\n  templateUrl: './mat-search-bar.component.html',\n  styleUrls: ['./mat-search-bar.component.scss'],\n  animations: [\n    trigger('slideInOut', [\n      state('true', style({ width: '*' })),\n      state('false', style({ width: '0' })),\n      transition('true => false', animate('300ms ease-in')),\n      transition('false => true', animate('300ms ease-out'))\n    ])\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatSearchBarComponent),\n      multi: true\n    }\n  ]\n})\nexport class MatSearchBarComponent extends AbstractControlValueAccessor<\nstring\n> {\n  @ViewChild('input') inputElement: ElementRef;\n\n  @Input() formControl: FormControl;\n\n  @Output() onBlur = new EventEmitter<string>();\n  @Output() onClose = new EventEmitter<void>();\n  @Output() onEnter = new EventEmitter<string>();\n  @Output() onFocus = new EventEmitter<string>();\n  @Output() onOpen = new EventEmitter<void>();\n\n  searchVisible = false;\n\n  public close(): void {\n    this.searchVisible = false;\n    this.value = '';\n    this.updateChanges();\n    this.onClose.emit();\n  }\n\n  public open(): void {\n    this.searchVisible = true;\n    this.inputElement.nativeElement.focus();\n    this.onOpen.emit();\n  }\n\n  onBlurring(searchValue: string) {\n    if(!searchValue) {\n      this.searchVisible = false;\n    }\n    this.onBlur.emit(searchValue);\n  }\n\n  onEnterring(searchValue: string) {\n    this.onEnter.emit(searchValue);\n  }\n\n  onFocussing(searchValue: string) {\n    this.onFocus.emit(searchValue);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatIconModule,\n  MatInputModule,\n  MatRippleModule\n} from '@angular/material';\n\nimport { MatSearchBarComponent } from './mat-search-bar/mat-search-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatIconModule,\n    MatInputModule,\n    MatRippleModule,\n\n    //Reactive form\n    ReactiveFormsModule\n  ],\n  exports: [MatSearchBarComponent],\n  declarations: [MatSearchBarComponent]\n})\nexport class NgMatSearchBarModule { }\n"],"names":["tslib_1.__extends"],"mappings":"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"}
