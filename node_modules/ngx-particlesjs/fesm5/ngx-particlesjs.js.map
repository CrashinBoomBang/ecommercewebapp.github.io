{"version":3,"file":"ngx-particlesjs.js.map","sources":["ng://ngx-particlesjs/lib/common.ts","ng://ngx-particlesjs/lib/particle.ts","ng://ngx-particlesjs/lib/ngx-particles.component.ts","ng://ngx-particlesjs/lib/ngx-particles.module.ts"],"sourcesContent":["export interface ParticleArgs {\r\n  speed?: 'fast' | 'normal' | 'slow' | number[];\r\n  size?: number;\r\n}\r\n\r\nexport function saveDecimal(origin: number) {\r\n  return Math.floor(origin * 100) / 100;\r\n}\r\n","import {saveDecimal} from './common';\r\n\r\nexport class Particle {\r\n  private max_width: number;\r\n  private max_height: number;\r\n\r\n  private x: number;\r\n  private y: number;\r\n\r\n  private vx: number;\r\n  private vy: number;\r\n\r\n  private size: number;\r\n  private color: string;\r\n\r\n  constructor(range: number[], speed: 'fast' | 'normal' | 'slow' | number[] = 'normal', size = 1.5) {\r\n    this.max_width = range[0];\r\n    this.max_height = range[1];\r\n    this.initPosition();\r\n    this.initSpeed(speed);\r\n    this.initSize(size);\r\n    this.initColor();\r\n  }\r\n\r\n  onRange(range: number[]) {\r\n    this.max_width = range[0];\r\n    this.max_height = range[1];\r\n  }\r\n\r\n  private initPosition() {\r\n    this.x = saveDecimal(Math.random() * this.max_width);\r\n    this.y = saveDecimal(Math.random() * this.max_height);\r\n  }\r\n\r\n  private initSpeed(speed: 'fast' | 'normal' | 'slow' | number[]) {\r\n    let vi = [];\r\n    if (typeof speed === 'string') {\r\n      switch (speed) {\r\n        case 'fast':\r\n          vi = [1, 1];\r\n          break;\r\n        case 'normal':\r\n          vi = [2, 2];\r\n          break;\r\n        case 'slow':\r\n          vi = [5, 5];\r\n          break;\r\n        default:\r\n          vi = [2, 2];\r\n      }\r\n    } else {\r\n      vi = speed;\r\n    }\r\n    this.vx = saveDecimal(Math.random() / vi[0]);\r\n    this.vy = saveDecimal(Math.random() / vi[1]);\r\n  }\r\n\r\n  private initSize(size: number) {\r\n    this.size = (1 + Math.random()) * size;\r\n  }\r\n\r\n  private initColor() {\r\n    this.color = `rgb(${Math.floor(Math.random() * 256)},${Math.floor(Math.random() * 256)},${Math.floor(Math.random() * 256)})`;\r\n  }\r\n\r\n  draw(ctx: CanvasRenderingContext2D) {\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\r\n    ctx.fillStyle = this.color;\r\n    ctx.strokeStyle = this.color;\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n\r\n  update() {\r\n    this.edge();\r\n    this.x = this.x + this.vx;\r\n    this.y = this.y + this.vy;\r\n  }\r\n\r\n  private edge() {\r\n    if (this.x + this.vx > this.max_width || this.x + this.vx < 0) {\r\n      this.vx = -this.vx;\r\n    }\r\n    if (this.y + this.vy > this.max_height || this.y + this.vy < 0) {\r\n      this.vy = -this.vy;\r\n    }\r\n  }\r\n}\r\n","import {AfterViewInit, Component, ElementRef, HostListener, Input, OnDestroy, ViewChild} from '@angular/core';\nimport {Particle} from './particle';\nimport {ParticleArgs} from './common';\n\n@Component({\n  selector: 'ngx-particle',\n  template: `\n    <div id=\"stage\">\n      <canvas #stageRef></canvas>\n    </div>\n  `,\n  styles: [`\n    #stage {\n      height: 100%;\n      width: 100%;\n      will-change: all;\n    }\n  `]\n})\nexport class NgxParticlesComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('stageRef') stageRef: ElementRef;\n\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private width: number;\n  private height: number;\n  private particles: Particle[] = [];\n  private mainAnimationFrame: any;\n  private changeAnimationFrame: any;\n  private resizing: any = false;\n\n  @Input() total = 100;\n  @Input() default_width: number;\n  @Input() default_height: number;\n  @Input() args?: ParticleArgs;\n\n  ngAfterViewInit() {\n    this.canvas = this.stageRef.nativeElement;\n    this.ctx = this.canvas.getContext('2d', {alpha: false});\n    this.initStage();\n    this.initParticle();\n    this.drawContext();\n  }\n\n  ngOnDestroy() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    window.cancelAnimationFrame(this.mainAnimationFrame);\n    window.cancelAnimationFrame(this.changeAnimationFrame);\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    if (!this.resizing && (!this.default_height || !this.default_width)) {\n      this.resizing = true;\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(this.stageChange);\n      } else {\n        setTimeout(this.stageChange, 66);\n      }\n    }\n  }\n\n  private initStage() {\n    const {clientWidth, clientHeight} = this.canvas.parentElement;\n    if (this.default_width) {\n      this.canvas.width = this.width = this.default_width;\n    } else {\n      this.canvas.width = this.width = clientWidth;\n    }\n    if (this.default_height) {\n      this.canvas.height = this.height = this.default_height;\n    } else {\n      this.canvas.height = this.height = clientHeight;\n    }\n  }\n\n  private initParticle() {\n    const range = [this.width, this.height];\n    for (let i = 0; i < this.total; i++) {\n      this.particles[i] = new Particle(\n        range,\n        (this.args && this.args.speed) ? this.args.speed : 'normal',\n        (this.args && this.args.size) ? this.args.size : 1.5\n      );\n    }\n  }\n\n  private stageChange = () => {\n    this.initStage();\n    const range = [this.width, this.height];\n    for (const x of this.particles) {\n      x.onRange(range);\n    }\n    this.resizing = false;\n  };\n\n  private drawContext = () => {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    for (const x of this.particles) {\n      x.draw(this.ctx);\n      x.update();\n    }\n    this.mainAnimationFrame = window.requestAnimationFrame(this.drawContext);\n    this.resizing = false;\n  };\n}\n","import {NgModule} from '@angular/core';\nimport {NgxParticlesComponent} from './ngx-particles.component';\n\n@NgModule({\n  imports: [],\n  declarations: [NgxParticlesComponent],\n  exports: [NgxParticlesComponent]\n})\nexport class NgxParticlesModule {\n}\n"],"names":["tslib_1.__values"],"mappings":"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"}
