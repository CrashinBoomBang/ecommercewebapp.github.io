/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { saveDecimal } from './common';
var Particle = /** @class */ (function () {
    function Particle(range, speed, size) {
        if (speed === void 0) { speed = 'normal'; }
        if (size === void 0) { size = 1.5; }
        this.max_width = range[0];
        this.max_height = range[1];
        this.initPosition();
        this.initSpeed(speed);
        this.initSize(size);
        this.initColor();
    }
    /**
     * @param {?} range
     * @return {?}
     */
    Particle.prototype.onRange = /**
     * @param {?} range
     * @return {?}
     */
    function (range) {
        this.max_width = range[0];
        this.max_height = range[1];
    };
    /**
     * @return {?}
     */
    Particle.prototype.initPosition = /**
     * @return {?}
     */
    function () {
        this.x = saveDecimal(Math.random() * this.max_width);
        this.y = saveDecimal(Math.random() * this.max_height);
    };
    /**
     * @param {?} speed
     * @return {?}
     */
    Particle.prototype.initSpeed = /**
     * @param {?} speed
     * @return {?}
     */
    function (speed) {
        /** @type {?} */
        var vi = [];
        if (typeof speed === 'string') {
            switch (speed) {
                case 'fast':
                    vi = [1, 1];
                    break;
                case 'normal':
                    vi = [2, 2];
                    break;
                case 'slow':
                    vi = [5, 5];
                    break;
                default:
                    vi = [2, 2];
            }
        }
        else {
            vi = speed;
        }
        this.vx = saveDecimal(Math.random() / vi[0]);
        this.vy = saveDecimal(Math.random() / vi[1]);
    };
    /**
     * @param {?} size
     * @return {?}
     */
    Particle.prototype.initSize = /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        this.size = (1 + Math.random()) * size;
    };
    /**
     * @return {?}
     */
    Particle.prototype.initColor = /**
     * @return {?}
     */
    function () {
        this.color = "rgb(" + Math.floor(Math.random() * 256) + "," + Math.floor(Math.random() * 256) + "," + Math.floor(Math.random() * 256) + ")";
    };
    /**
     * @param {?} ctx
     * @return {?}
     */
    Particle.prototype.draw = /**
     * @param {?} ctx
     * @return {?}
     */
    function (ctx) {
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);
        ctx.fillStyle = this.color;
        ctx.strokeStyle = this.color;
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
    };
    /**
     * @return {?}
     */
    Particle.prototype.update = /**
     * @return {?}
     */
    function () {
        this.edge();
        this.x = this.x + this.vx;
        this.y = this.y + this.vy;
    };
    /**
     * @return {?}
     */
    Particle.prototype.edge = /**
     * @return {?}
     */
    function () {
        if (this.x + this.vx > this.max_width || this.x + this.vx < 0) {
            this.vx = -this.vx;
        }
        if (this.y + this.vy > this.max_height || this.y + this.vy < 0) {
            this.vy = -this.vy;
        }
    };
    return Particle;
}());
export { Particle };
if (false) {
    /** @type {?} */
    Particle.prototype.max_width;
    /** @type {?} */
    Particle.prototype.max_height;
    /** @type {?} */
    Particle.prototype.x;
    /** @type {?} */
    Particle.prototype.y;
    /** @type {?} */
    Particle.prototype.vx;
    /** @type {?} */
    Particle.prototype.vy;
    /** @type {?} */
    Particle.prototype.size;
    /** @type {?} */
    Particle.prototype.color;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFydGljbGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGFydGljbGVzanMvIiwic291cmNlcyI6WyJsaWIvcGFydGljbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFFckMsSUFBQTtJQWFFLGtCQUFZLEtBQWUsRUFBRSxLQUF1RCxFQUFFLElBQVU7UUFBbkUsc0JBQUEsRUFBQSxnQkFBdUQ7UUFBRSxxQkFBQSxFQUFBLFVBQVU7UUFDOUYsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7S0FDbEI7Ozs7O0lBRUQsMEJBQU87Ozs7SUFBUCxVQUFRLEtBQWU7UUFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDNUI7Ozs7SUFFTywrQkFBWTs7OztRQUNsQixJQUFJLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxDQUFDLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7Ozs7OztJQUdoRCw0QkFBUzs7OztjQUFDLEtBQTRDOztRQUM1RCxJQUFJLEVBQUUsR0FBRyxFQUFF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QUFJLENBQUMsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztTQUNwQjs7bUJBdkZMO0lBeUZDLENBQUE7QUF2RkQsb0JBdUZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzYXZlRGVjaW1hbH0gZnJvbSAnLi9jb21tb24nO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnRpY2xlIHtcclxuICBwcml2YXRlIG1heF93aWR0aDogbnVtYmVyO1xyXG4gIHByaXZhdGUgbWF4X2hlaWdodDogbnVtYmVyO1xyXG5cclxuICBwcml2YXRlIHg6IG51bWJlcjtcclxuICBwcml2YXRlIHk6IG51bWJlcjtcclxuXHJcbiAgcHJpdmF0ZSB2eDogbnVtYmVyO1xyXG4gIHByaXZhdGUgdnk6IG51bWJlcjtcclxuXHJcbiAgcHJpdmF0ZSBzaXplOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBjb2xvcjogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihyYW5nZTogbnVtYmVyW10sIHNwZWVkOiAnZmFzdCcgfCAnbm9ybWFsJyB8ICdzbG93JyB8IG51bWJlcltdID0gJ25vcm1hbCcsIHNpemUgPSAxLjUpIHtcclxuICAgIHRoaXMubWF4X3dpZHRoID0gcmFuZ2VbMF07XHJcbiAgICB0aGlzLm1heF9oZWlnaHQgPSByYW5nZVsxXTtcclxuICAgIHRoaXMuaW5pdFBvc2l0aW9uKCk7XHJcbiAgICB0aGlzLmluaXRTcGVlZChzcGVlZCk7XHJcbiAgICB0aGlzLmluaXRTaXplKHNpemUpO1xyXG4gICAgdGhpcy5pbml0Q29sb3IoKTtcclxuICB9XHJcblxyXG4gIG9uUmFuZ2UocmFuZ2U6IG51bWJlcltdKSB7XHJcbiAgICB0aGlzLm1heF93aWR0aCA9IHJhbmdlWzBdO1xyXG4gICAgdGhpcy5tYXhfaGVpZ2h0ID0gcmFuZ2VbMV07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGluaXRQb3NpdGlvbigpIHtcclxuICAgIHRoaXMueCA9IHNhdmVEZWNpbWFsKE1hdGgucmFuZG9tKCkgKiB0aGlzLm1heF93aWR0aCk7XHJcbiAgICB0aGlzLnkgPSBzYXZlRGVjaW1hbChNYXRoLnJhbmRvbSgpICogdGhpcy5tYXhfaGVpZ2h0KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgaW5pdFNwZWVkKHNwZWVkOiAnZmFzdCcgfCAnbm9ybWFsJyB8ICdzbG93JyB8IG51bWJlcltdKSB7XHJcbiAgICBsZXQgdmkgPSBbXTtcclxuICAgIGlmICh0eXBlb2Ygc3BlZWQgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHN3aXRjaCAoc3BlZWQpIHtcclxuICAgICAgICBjYXNlICdmYXN0JzpcclxuICAgICAgICAgIHZpID0gWzEsIDFdO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnbm9ybWFsJzpcclxuICAgICAgICAgIHZpID0gWzIsIDJdO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnc2xvdyc6XHJcbiAgICAgICAgICB2aSA9IFs1LCA1XTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICB2aSA9IFsyLCAyXTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmkgPSBzcGVlZDtcclxuICAgIH1cclxuICAgIHRoaXMudnggPSBzYXZlRGVjaW1hbChNYXRoLnJhbmRvbSgpIC8gdmlbMF0pO1xyXG4gICAgdGhpcy52eSA9IHNhdmVEZWNpbWFsKE1hdGgucmFuZG9tKCkgLyB2aVsxXSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGluaXRTaXplKHNpemU6IG51bWJlcikge1xyXG4gICAgdGhpcy5zaXplID0gKDEgKyBNYXRoLnJhbmRvbSgpKSAqIHNpemU7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGluaXRDb2xvcigpIHtcclxuICAgIHRoaXMuY29sb3IgPSBgcmdiKCR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KX0sJHtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpfSwke01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1Nil9KWA7XHJcbiAgfVxyXG5cclxuICBkcmF3KGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKSB7XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKHRoaXMueCwgdGhpcy55LCB0aGlzLnNpemUsIDAsIDIgKiBNYXRoLlBJKTtcclxuICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLmNvbG9yO1xyXG4gICAgY3R4LnN0cm9rZVN0eWxlID0gdGhpcy5jb2xvcjtcclxuICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgIGN0eC5maWxsKCk7XHJcbiAgICBjdHguc3Ryb2tlKCk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoKSB7XHJcbiAgICB0aGlzLmVkZ2UoKTtcclxuICAgIHRoaXMueCA9IHRoaXMueCArIHRoaXMudng7XHJcbiAgICB0aGlzLnkgPSB0aGlzLnkgKyB0aGlzLnZ5O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBlZGdlKCkge1xyXG4gICAgaWYgKHRoaXMueCArIHRoaXMudnggPiB0aGlzLm1heF93aWR0aCB8fCB0aGlzLnggKyB0aGlzLnZ4IDwgMCkge1xyXG4gICAgICB0aGlzLnZ4ID0gLXRoaXMudng7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy55ICsgdGhpcy52eSA+IHRoaXMubWF4X2hlaWdodCB8fCB0aGlzLnkgKyB0aGlzLnZ5IDwgMCkge1xyXG4gICAgICB0aGlzLnZ5ID0gLXRoaXMudnk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==